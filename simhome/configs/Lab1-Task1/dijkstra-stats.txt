sim-profile: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: ./bin/sim-profile -brprof -iclass -redir:sim ./configs/Lab1-Task1/dijkstra-stats.txt ./apps/dijkstra/dijkstra_small ./apps/dijkstra/input.dat 

sim: simulation started @ Tue Sep 16 07:31:02 2025, options follow:

sim-profile: This simulator implements a functional simulator with
profiling support.  Run with the `-h' flag to see profiling options
available.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ./configs/Lab1-Task1/dijkstra-stats.txt # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-all                    false # enable all profile options
-iclass                  true # enable instruction class profiling
-iprof                  false # enable instruction profiling
-brprof                  true # enable branch instruction profiling
-amprof                 false # enable address mode profiling
-segprof                false # enable load/store address segment profiling
-tsymprof               false # enable text symbol profiling
-taddrprof              false # enable text address profiling
-dsymprof               false # enable data symbol profiling
-internal               false # include compiler-internal symbols during symbol profiling
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)

sim: ** starting functional simulation **

sim: ** simulation statistics **
sim_num_insn               54882916 # total number of instructions executed
sim_num_refs               19132461 # total number of loads and stores executed
sim_elapsed_time                  2 # total simulation time in seconds
sim_inst_rate          27441458.0000 # simulation speed (in insts/sec)

sim_inst_class_prof    # instruction class profile
sim_inst_class_prof.array_size = 7
sim_inst_class_prof.bucket_size = 1
sim_inst_class_prof.count = 7
sim_inst_class_prof.total = 54882915
sim_inst_class_prof.imin = 0
sim_inst_class_prof.imax = 7
sim_inst_class_prof.average = 7840416.4286
sim_inst_class_prof.std_dev = 9728336.8981
sim_inst_class_prof.overflows = 0
# pdf == prob dist fn, cdf == cumulative dist fn
#          index      count    pdf 
sim_inst_class_prof.start_dist
load               14786930  26.94 
store               4345531   7.92 
uncond branch        437975   0.80 
cond branch         9381383  17.09 
int computation    25930851  47.25 
fp computation            0   0.00 
trap                    245   0.00 
sim_inst_class_prof.end_dist


sim_branch_prof        # branch instruction profile
sim_branch_prof.array_size = 6
sim_branch_prof.bucket_size = 1
sim_branch_prof.count = 6
sim_branch_prof.total = 9819358
sim_branch_prof.imin = 0
sim_branch_prof.imax = 6
sim_branch_prof.average = 1636559.6667
sim_branch_prof.std_dev = 3794914.1807
sim_branch_prof.overflows = 0
# pdf == prob dist fn, cdf == cumulative dist fn
#          index      count    pdf 
sim_branch_prof.start_dist
uncond direct        187682   1.91 
cond direct         9381383  95.54 
call direct          119562   1.22 
uncond indirect      130256   1.33 
cond indirect             0   0.00 
call indirect           475   0.00 
sim_branch_prof.end_dist

ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  99328 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  52704 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   49 # total number of pages allocated
mem.page_mem                   196k # total size of memory pages allocated
mem.ptab_misses                  51 # total first level page table misses
mem.ptab_accesses         258482136 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

